{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","count","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+RAmCeA,MA9Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,yBAAKC,UAAU,SACb,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACb,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBACXD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOL,UAAU,iBACvBI,OAIP,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAG,KAAhD,UCsFOC,G,kNAjGbC,MAAQ,CACNC,MAAO,EACPC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,4DANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAOZ,EAAKM,UAAS,iBAAO,CAAEN,OAAQA,EAAQD,WAAW,MAVxC,2C,kEAmBVQ,KAAKN,c,+BAeG,IAAD,EACuBM,KAAKV,MAA3BE,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,6BAASZ,UAAU,aAChBW,EACC,yBAAKX,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,UACZY,EAAOT,KAAI,SAACiB,GAAD,OACV,kBAAC,EAAD,CACEd,IAAKc,EAAMC,GACXA,GAAID,EAAMC,GACV1B,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAME,mBACdvB,OAAQqB,EAAMrB,kB,GA3DZwB,IAAMC,YCHxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f4cc3d9d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import \"./Movie.css\";\r\n\r\n//state가 필요없을경우 class를 사용하지 않아도 된다!! 그냥 함수사용하자!\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title} />\r\n      <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"movie__genres\">\r\n          {genres.map((genre, index) => (\r\n            <li key={index} className=\"genres__genre\">\r\n              {genre}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//prop를 찾아와야한다!\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\n//class가 혼동 될수있다.. 그래서 className을 css를 위해 해줘야함!!!\n//map은 항상 key가 필요하다!\nclass App extends React.Component {\n  state = {\n    count: 0,\n    isLoading: true,\n    movies: [],\n  };\n\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n    //  await for what? axios를.. async await..\n    // 기다려주세요 라는뜻임.. js는 기다려주지 않기 때문에\n    this.setState(() => ({ movies: movies, isLoading: false }));\n    // state는 객체기때문에 {} 를 통하여 안의 내용을 가져올수있음.\n  };\n\n  componentDidMount() {\n    // setTimeout(() => {\n    //   this.setState(() => ({ isLoading: false }));\n    // }, 2000);\n    // axios는 좀 느려서 시간을 좀 줘야한다!\n    this.getMovies();\n  }\n\n  // add = () => {\n  //   this.setState({\n  //     count: this.state.count + 1,\n  //   });\n  // };\n\n  // minus = () => {\n  //   this.setState((current) => ({\n  //     count: current.count - 1,\n  //   }));\n  // };\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\n// function Potato(props) {\n//   return (\n//     <h1>\n//       I like {props.name} and {props.age} years old\n//     </h1>\n//   );\n// }\n\n// const animal = [\n//   { id: 1, name: \"dog\", age: 30 },\n//   { id: 2, name: \"lion\", age: 20 },\n// ];\n\n// function usingFunction(dish) {\n//   return <Potato key={dish.id} name={dish.name} age={dish.age} />;\n// }\n\n// function App() {\n//   return (\n//     <div>\n//       <h1> Hello </h1>\n//       {animal.map(usingFunction)}\n//     </div>\n//   );\n// }\n\n//<h2>count is : {this.state.count}</h2>\n// <button onClick={this.add}>add</button> */\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}